// Generated by Dagger (https://dagger.dev).
package com.besenior.kotlinadvancedcourse.viewmodel;

import com.besenior.kotlinadvancedcourse.repository.AppRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppViewModel_Factory implements Factory<AppViewModel> {
  private final Provider<AppRepository> repositoryProvider;

  public AppViewModel_Factory(Provider<AppRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public AppViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static AppViewModel_Factory create(Provider<AppRepository> repositoryProvider) {
    return new AppViewModel_Factory(repositoryProvider);
  }

  public static AppViewModel newInstance(AppRepository repository) {
    return new AppViewModel(repository);
  }
}
