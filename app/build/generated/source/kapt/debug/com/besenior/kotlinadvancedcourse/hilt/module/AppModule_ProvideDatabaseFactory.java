// Generated by Dagger (https://dagger.dev).
package com.besenior.kotlinadvancedcourse.hilt.module;

import android.app.Application;
import com.besenior.kotlinadvancedcourse.room.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDatabaseFactory implements Factory<AppDatabase> {
  private final Provider<Application> applicationProvider;

  public AppModule_ProvideDatabaseFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public AppDatabase get() {
    return provideDatabase(applicationProvider.get());
  }

  public static AppModule_ProvideDatabaseFactory create(Provider<Application> applicationProvider) {
    return new AppModule_ProvideDatabaseFactory(applicationProvider);
  }

  public static AppDatabase provideDatabase(Application application) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDatabase(application));
  }
}
